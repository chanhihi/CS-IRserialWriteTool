<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="config.Text" xml:space="preserve">
    <value>
SetProtocolConnector 1
SetPowerVoltage 3.3
PowerOn
DAP_Acquire
PSoC4_ReadRow 1023
PSoC4_WriteRow 1023 0x48 0x49 0x50 0x51 0x52 0x53 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
PSoC4_ReadRow 1023

PowerOff
ClosePort

</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>